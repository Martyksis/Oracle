import discord
import random
import os
import asyncio
import datetime
import logging
import time
from discord import app_commands
from discord.ui import Button, View
from flask import Flask  # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ

app = Flask(__name__)  # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ

@app.route('/')  # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
def home():      # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
    return "Discord Bot is alive!"  # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ

def run_web():   # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
    port = int(os.environ.get("PORT", 8080))  # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
    app.run(host='0.0.0.0', port=port)  # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger('discord')
logger.setLevel(logging.INFO)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è intents
intents = discord.Intents.default()
intents.message_content = True

bot = discord.Client(
    intents=intents, 
    status=discord.Status.online,
    activity=discord.Game("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ–º")
)
tree = app_commands.CommandTree(bot)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π
active_games = {}
recent_events = {}
player_stats = {}  # –•—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤

# –ì–µ—Ä–±—ã –≥—Ä–∞—Ñ—Å—Ç–≤–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
COATS_OF_ARMS = {
    "poor": "üõ°Ô∏è",      # –ë–µ–¥–Ω–æ–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ
    "normal": "üè∞",     # –û–±—ã—á–Ω–æ–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ
    "rich": "üëë",       # –ë–æ–≥–∞—Ç–æ–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ
    "legendary": "üêâ"   # –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ
}

# –í—Å–µ —Å–æ–±—ã—Ç–∏—è
EVENTS = [
    # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    {
        "title": "üåæ –û—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–∂–∞–π!",
        "description": "–ö—Ä–µ—Å—Ç—å—è–Ω–µ –ø—Ä–∏–Ω–µ—Å–ª–∏ –∏–∑–ª–∏—à–∫–∏ —É—Ä–æ–∂–∞—è –≤ –≤–∞—à–∏ –∞–º–±–∞—Ä—ã.",
        "options": [
            {"text": "–ü—Ä–æ–¥–∞—Ç—å –∏–∑–ª–∏—à–∫–∏", "wealth": 30, "popularity": -15, "karma": -10},
            {"text": "–†–∞–∑–¥–∞—Ç—å –≥–æ–ª–æ–¥–∞—é—â–∏–º", "wealth": -10, "popularity": 20, "karma": 15},
            {"text": "–û—Å—Ç–∞–≤–∏—Ç—å –≤ –∑–∞–ø–∞—Å–µ", "wealth": 10, "popularity": 0, "karma": 5}
        ]
    },
    {
        "title": "üî• –ü–æ–∂–∞—Ä –≤ –≥–æ—Ä–æ–¥–µ!",
        "description": "–°–≥–æ—Ä–µ–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∂–∏–ª—ã—Ö –¥–æ–º–æ–≤ –≤ –±–µ–¥–Ω–æ–º –∫–≤–∞—Ä—Ç–∞–ª–µ.",
        "options": [
            {"text": "–í—ã–¥–µ–ª–∏—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ", "wealth": -25, "popularity": 15, "karma": 10},
            {"text": "–û–±–ª–æ–∂–∏—Ç—å –Ω–∞–ª–æ–≥–æ–º –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞", "wealth": 10, "popularity": -20, "karma": -15},
            {"text": "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É", "wealth": 0, "popularity": -25, "karma": -20}
        ]
    },
    # –ù–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
    {
        "title": "‚öîÔ∏è –í–æ–π–Ω–∞ —Å —Å–æ—Å–µ–¥—è–º–∏",
        "description": "–°–æ—Å–µ–¥–Ω–µ–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ –æ–±—ä—è–≤–∏–ª–æ –≤–∞–º –≤–æ–π–Ω—É!",
        "options": [
            {"text": "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–º", "wealth": -40, "popularity": -10, "karma": -20},
            {"text": "–£–∫—Ä–µ–ø–∏—Ç—å –æ–±–æ—Ä–æ–Ω—É", "wealth": -30, "popularity": 10, "karma": 5},
            {"text": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å–ª–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤", "wealth": -20, "popularity": 5, "karma": 15}
        ]
    },
    {
        "title": "üéì –û—Ç–∫—Ä—ã—Ç–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞",
        "description": "–ú—É–¥—Ä–µ—Ü—ã –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç —Å–æ–∑–¥–∞—Ç—å —Ü–µ–Ω—Ç—Ä –∑–Ω–∞–Ω–∏–π –≤ –≤–∞—à–µ–º –≥—Ä–∞—Ñ—Å—Ç–≤–µ.",
        "options": [
            {"text": "–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å", "wealth": -50, "popularity": 10, "karma": 30},
            {"text": "–í—ã–¥–µ–ª–∏—Ç—å —á–∞—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤", "wealth": -30, "popularity": 5, "karma": 15},
            {"text": "–û—Ç–∫–∞–∑–∞—Ç—å", "wealth": 0, "popularity": -10, "karma": -20}
        ]
    },
    {
        "title": "üåä –ó–∞–≥–∞–¥–æ—á–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ",
        "description": "–†—ã–±–∞–∫–∏ —Å–æ–æ–±—â–∞—é—Ç –æ —Å—Ç—Ä–∞–Ω–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –≤ –æ–∑–µ—Ä–µ, –ø—É–≥–∞—é—â–µ–º –∂–∏—Ç–µ–ª–µ–π.",
        "options": [
            {"text": "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –æ—Ö–æ—Ç—É", "wealth": -20, "popularity": 15, "karma": -25},
            {"text": "–ò–∑—É—á–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ", "wealth": -15, "popularity": 5, "karma": 10},
            {"text": "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å", "wealth": 0, "popularity": -15, "karma": -10}
        ]
    },
    {
        "title": "üíç –°–≤–∞–¥—å–±–∞ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞",
        "description": "–í–∞—à –Ω–∞—Å–ª–µ–¥–Ω–∏–∫ —Ä–µ—à–∏–ª –∂–µ–Ω–∏—Ç—å—Å—è! –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –ø–æ–≤–æ–¥ –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏–∫–∞.",
        "options": [
            {"text": "–£—Å—Ç—Ä–æ–∏—Ç—å –∫–æ—Ä–æ–ª–µ–≤—Å–∫—É—é —Å–≤–∞–¥—å–±—É", "wealth": -60, "popularity": 40, "karma": 20},
            {"text": "–°–∫—Ä–æ–º–Ω–æ–µ —Å–µ–º–µ–π–Ω–æ–µ —Ç–æ—Ä–∂–µ—Å—Ç–≤–æ", "wealth": -20, "popularity": 10, "karma": 10},
            {"text": "–û—Ç–∫–∞–∑–∞—Ç—å—Å—è —Ç—Ä–∞—Ç–∏—Ç—å—Å—è", "wealth": 0, "popularity": -30, "karma": -25}
        ]
    }
]

# –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
ACHIEVEMENTS = {
    "first_game": "üèÅ –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏",
    "wise_ruler": "üß† –ú—É–¥—Ä—ã–π –ø—Ä–∞–≤–∏—Ç–µ–ª—å",
    "people_champion": "ü¶∏ –ó–∞—â–∏—Ç–Ω–∏–∫ –Ω–∞—Ä–æ–¥–∞",
    "wealthy_ruler": "üí∞ –ö–æ—Ä–æ–ª—å –ú–∏–¥–∞—Å",
    "spiritual": "üôè –î—É—Ö–æ–≤–Ω—ã–π –ª–∏–¥–µ—Ä",
    "legendary": "üåü –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –ø—Ä–∞–≤–∏—Ç–µ–ª—å"
}

class GameSession:
    def __init__(self, user_id):
        self.wealth = 50
        self.popularity = 50
        self.karma = 50
        self.user_id = user_id
        self.last_active = asyncio.get_event_loop().time()
        self.decisions = []  # –ò—Å—Ç–æ—Ä–∏—è —Ä–µ—à–µ–Ω–∏–π
        self.title = "–ë–∞—Ä–æ–Ω"  # –¢–µ–∫—É—â–∏–π —Ç–∏—Ç—É–ª
        self.coat_of_arms = COATS_OF_ARMS["normal"]  # –ì–µ—Ä–± –≥—Ä–∞—Ñ—Å—Ç–≤–∞

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞
        if user_id not in player_stats:
            player_stats[user_id] = {
                "games_played": 0,
                "total_wealth": 0,
                "total_popularity": 0,
                "total_karma": 0,
                "achievements": []
            }

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏"
        if "first_game" not in player_stats[user_id]["achievements"]:
            player_stats[user_id]["achievements"].append("first_game")

        if user_id not in recent_events:
            recent_events[user_id] = []

        self.current_event = self.get_random_event()

    def get_random_event(self):
        # –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
        available = [e for e in EVENTS if e["title"] not in recent_events.get(self.user_id, [])]
        if not available:
            available = EVENTS
            recent_events[self.user_id] = []

        event = random.choice(available)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        recent_events[self.user_id].append(event["title"])
        if len(recent_events[self.user_id]) > 3:
            recent_events[self.user_id].pop(0)

        return event

    def apply_choice(self, choice):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—à–µ–Ω–∏–µ
        self.decisions.append({
            "event": self.current_event["title"],
            "choice": choice["text"],
            "effects": {
                "wealth": choice["wealth"],
                "popularity": choice["popularity"],
                "karma": choice["karma"]
            }
        })

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –≤—ã—Ö–æ–¥–∞ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
        self.wealth = self.clamp_value(self.wealth + choice["wealth"])
        self.popularity = self.clamp_value(self.popularity + choice["popularity"])
        self.karma = self.clamp_value(self.karma + choice["karma"])
        self.last_active = asyncio.get_event_loop().time()

        # –û–±–Ω–æ–≤–ª—è–µ–º –≥–µ—Ä–± –∏ —Ç–∏—Ç—É–ª
        self.update_title_and_coat()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        self.check_achievements()

        return self.is_game_over()

    def clamp_value(self, value):
        """–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0-100"""
        return max(0, min(100, value))

    def is_game_over(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã"""
        return any((
            self.wealth <= 0, self.wealth >= 100,
            self.popularity <= 0, self.popularity >= 100,
            self.karma <= 0, self.karma >= 100
        ))

    def get_game_over_reason(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã –∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        if self.wealth <= 0:
            return "üí∏ –ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ!", "–í–∞—à–∞ –∫–∞–∑–Ω–∞ –æ–ø—É—Å—Ç–µ–ª–∞! –ö–æ—Ä–æ–ª—å –æ—Ç—Å—Ç—Ä–∞–Ω–∏–ª –≤–∞—Å –æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ—Å—Ç–≤–æ–º."
        elif self.wealth >= 100:
            return "üè∞ –ù–µ–≤–∏–¥–∞–Ω–Ω–æ–µ –±–æ–≥–∞—Ç—Å—Ç–≤–æ!", "–í–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–∞–ª–æ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫–æ! –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ —Å–≤—è–∑—å —Å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é –∏ —Ä–∞–∑–æ—Ä–∏–ª–∏—Å—å."
        elif self.popularity <= 0:
            return "üî• –ë—É–Ω—Ç!", "–ù–∞—Ä–æ–¥ –≤–æ—Å—Å—Ç–∞–ª –ø—Ä–æ—Ç–∏–≤ –≤–∞—à–µ–≥–æ –ø—Ä–∞–≤–ª–µ–Ω–∏—è! –í–∞–º –ø—Ä–∏—à–ª–æ—Å—å –±–µ–∂–∞—Ç—å –∏–∑ –≥—Ä–∞—Ñ—Å—Ç–≤–∞."
        elif self.popularity >= 100:
            return "üëë –ù–∞—Ä–æ–¥–Ω—ã–π –≥–µ—Ä–æ–π!", "–í–∞—à–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∏–≥–ª–∞ –Ω–µ–±–µ—Å! –í—ã —Å—Ç–∞–ª–∏ –Ω–æ–≤—ã–º –∫–æ—Ä–æ–ª—ë–º —ç—Ç–∏—Ö –∑–µ–º–µ–ª—å!"
        elif self.karma <= 0:
            return "‚öñÔ∏è –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–∞—Ä–∞!", "–ë–æ–≥–∏ –æ—Ç–≤–µ—Ä–Ω—É–ª–∏—Å—å –æ—Ç –≤–∞—Å! –í–∞—à–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ –ø–æ—Å—Ç–∏–≥–ª–∏ –Ω–µ—Å—á–∞—Å—Ç—å—è –∏ —Ä–∞–∑—Ä—É—Ö–∞."
        elif self.karma >= 100:
            return "‚ú® –ü—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ!", "–í–∞—à–∞ –∫–∞—Ä–º–∞ –¥–æ—Å—Ç–∏–≥–ª–∞ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞! –í—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –º–∏—Ä—Å–∫–∏–µ –¥–µ–ª–∞ —Ä–∞–¥–∏ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏."
        else:
            return "üèÜ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!", "–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ø—Ä–µ–¥–µ–ª–∞ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä–∞—Ñ—Å—Ç–≤–æ–º."

    def update_title_and_coat(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∏—Ç—É–ª –∏ –≥–µ—Ä–± –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        avg = (self.wealth + self.popularity + self.karma) / 3

        if avg < 30:
            self.title = "–ë–µ–¥–Ω—ã–π –ë–∞—Ä–æ–Ω"
            self.coat_of_arms = COATS_OF_ARMS["poor"]
        elif avg < 50:
            self.title = "–ë–∞—Ä–æ–Ω"
            self.coat_of_arms = COATS_OF_ARMS["normal"]
        elif avg < 70:
            self.title = "–ì—Ä–∞—Ñ"
            self.coat_of_arms = COATS_OF_ARMS["rich"]
        else:
            self.title = "–í–µ–ª–∏–∫–∏–π –ì–µ—Ä—Ü–æ–≥"
            self.coat_of_arms = COATS_OF_ARMS["legendary"]

    def check_achievements(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
        stats = player_stats[self.user_id]

        # –ú—É–¥—Ä—ã–π –ø—Ä–∞–≤–∏—Ç–µ–ª—å (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ)
        if 40 <= self.wealth <= 60 and 40 <= self.popularity <= 60 and 40 <= self.karma <= 60:
            if "wise_ruler" not in stats["achievements"]:
                stats["achievements"].append("wise_ruler")

        # –ó–∞—â–∏—Ç–Ω–∏–∫ –Ω–∞—Ä–æ–¥–∞ (–≤—ã—Å–æ–∫–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å)
        if self.popularity >= 80:
            if "people_champion" not in stats["achievements"]:
                stats["achievements"].append("people_champion")

        # –ö–æ—Ä–æ–ª—å –ú–∏–¥–∞—Å (–≤—ã—Å–æ–∫–æ–µ –±–æ–≥–∞—Ç—Å—Ç–≤–æ)
        if self.wealth >= 80:
            if "wealthy_ruler" not in stats["achievements"]:
                stats["achievements"].append("wealthy_ruler")

        # –î—É—Ö–æ–≤–Ω—ã–π –ª–∏–¥–µ—Ä (–≤—ã—Å–æ–∫–∞—è –∫–∞—Ä–º–∞)
        if self.karma >= 80:
            if "spiritual" not in stats["achievements"]:
                stats["achievements"].append("spiritual")

        # –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –ø—Ä–∞–≤–∏—Ç–µ–ª—å (–≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ)
        if self.wealth >= 70 and self.popularity >= 70 and self.karma >= 70:
            if "legendary" not in stats["achievements"]:
                stats["achievements"].append("legendary")

    def get_embed(self, choice=None):
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        avg = (self.wealth + self.popularity + self.karma) / 3
        if avg > 70:
            color = discord.Color.gold()
        elif avg > 40:
            color = discord.Color.green()
        else:
            color = discord.Color.red()

        embed = discord.Embed(
            title=f"{self.coat_of_arms} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ì—Ä–∞—Ñ—Å—Ç–≤–æ–º",
            description=f"**–¢–∏—Ç—É–ª:** {self.title}",
            color=color
        )

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        embed.add_field(
            name="üí∞ –ë–æ–≥–∞—Ç—Å—Ç–≤–æ", 
            value=self.create_progress_bar(self.wealth) + f" {self.wealth}/100", 
            inline=False
        )
        embed.add_field(
            name="üë• –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å", 
            value=self.create_progress_bar(self.popularity) + f" {self.popularity}/100", 
            inline=False
        )
        embed.add_field(
            name="‚òØÔ∏è –ö–∞—Ä–º–∞", 
            value=self.create_progress_bar(self.karma) + f" {self.karma}/100", 
            inline=False
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±–æ—Ä–µ, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
        if choice:
            wealth_change = f"{choice['wealth']:+}"
            popularity_change = f"{choice['popularity']:+}"
            karma_change = f"{choice['karma']:+}"

            embed.description = (
                f"**–¢–∏—Ç—É–ª:** {self.title}\n"
                f"**–í—ã –≤—ã–±—Ä–∞–ª–∏:** {choice['text']}\n\n"
                f"```diff\n"
                f"–ë–æ–≥–∞—Ç—Å—Ç–≤–æ: {wealth_change}\n"
                f"–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: {popularity_change}\n"
                f"–ö–∞—Ä–º–∞: {karma_change}\n"
                f"```"
            )

        return embed

    def create_progress_bar(self, value):
        """–°–æ–∑–¥–∞–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        safe_value = max(0, min(100, value))
        filled = '‚ñà' * (safe_value // 10)
        empty = '‚ñë' * (10 - (safe_value // 10))
        return f"[{filled}{empty}]"

class GameView(View):
    """–ö–∞—Å—Ç–æ–º–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    def __init__(self, game):
        super().__init__(timeout=300)
        self.game = game

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–±—ã—Ç–∏—è
        for option in game.current_event["options"]:
            self.add_item(OptionButton(option))

    async def on_timeout(self):
        # –ü—Ä–∏ —Ç–∞–π–º–∞—É—Ç–µ —É–¥–∞–ª—è–µ–º –∏–≥—Ä—É
        if self.game.user_id in active_games:
            del active_games[self.game.user_id]
        if self.game.user_id in recent_events:
            del recent_events[self.game.user_id]

class OptionButton(Button):
    """–ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ –≤ –∏–≥—Ä–µ"""
    def __init__(self, option):
        super().__init__(label=option["text"][:80], style=discord.ButtonStyle.secondary)
        self.option = option

    async def callback(self, interaction: discord.Interaction):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–≤—É—é —Å–µ—Å—Å–∏—é –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
            view = self.view
            if not hasattr(view, 'game') or view.game.user_id != interaction.user.id:
                await interaction.response.send_message("‚ùå –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∏–≥—Ä–∞ –∏–ª–∏ —Å–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞!", ephemeral=True)
                return

            game = view.game

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–±–æ—Ä –∏–≥—Ä–æ–∫–∞
            game_over = game.apply_choice(self.option)

            # –ü–æ–ª—É—á–∞–µ–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            result_embed = game.get_embed(choice=self.option)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
            if game_over:
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                title, description = game.get_game_over_reason()
                result_embed.title = f"{game.coat_of_arms} {title}"
                result_embed.description = description

                # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä—ã
                result_embed.add_field(
                    name="üìä –ò—Ç–æ–≥–∏ –∏–≥—Ä—ã",
                    value=(
                        f"**–ë–æ–≥–∞—Ç—Å—Ç–≤–æ:** {game.wealth}/100\n"
                        f"**–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å:** {game.popularity}/100\n"
                        f"**–ö–∞—Ä–º–∞:** {game.karma}/100\n"
                        f"**–†–µ—à–µ–Ω–∏–π –ø—Ä–∏–Ω—è—Ç–æ:** {len(game.decisions)}"
                    ),
                    inline=False
                )

                # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞
                stats = player_stats[interaction.user.id]
                stats["games_played"] += 1
                stats["total_wealth"] += game.wealth
                stats["total_popularity"] += game.popularity
                stats["total_karma"] += game.karma

                # –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–≤—É—é —Å–µ—Å—Å–∏—é
                if interaction.user.id in active_games:
                    del active_games[interaction.user.id]
                if interaction.user.id in recent_events:
                    del recent_events[interaction.user.id]

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫
                await interaction.response.edit_message(embed=result_embed, view=None)
            else:
                # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
                game.current_event = game.get_random_event()

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º —Å–æ–±—ã—Ç–∏–∏
                result_embed.add_field(
                    name=f"**{game.current_event['title']}**", 
                    value=game.current_event['description'], 
                    inline=False
                )

                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
                new_view = GameView(game)

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await interaction.response.edit_message(embed=result_embed, view=new_view)

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞: {e}", exc_info=True)
            # –£–¥–∞–ª—è–µ–º —Å–ª–æ–º–∞–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
            if interaction.user.id in active_games:
                del active_games[interaction.user.id]
            if interaction.user.id in recent_events:
                del recent_events[interaction.user.id]

            try:
                await interaction.response.send_message(
                    "‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤—ã–±–æ—Ä–∞. –ò–≥—Ä–∞ –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/start_game` –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã.", 
                    ephemeral=True
                )
            except:
                await interaction.followup.send(
                    "‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤—ã–±–æ—Ä–∞. –ò–≥—Ä–∞ –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/start_game` –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã.", 
                    ephemeral=True
                )

@tree.command(name="start_game", description="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ—Å—Ç–≤–æ–º")
async def start_game(interaction: discord.Interaction):
    try:
        # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        await interaction.response.defer(thinking=True)

        if interaction.user.id in active_games:
            await interaction.followup.send("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞! –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É —Å–Ω–∞—á–∞–ª–∞.", ephemeral=True)
            return

        game = GameSession(interaction.user.id)
        active_games[interaction.user.id] = game

        embed = game.get_embed()
        embed.description = (
            f"**{game.coat_of_arms} –ö–æ—Ä–æ–ª—å –¥–∞—Ä–æ–≤–∞–ª –≤–∞–º –≥—Ä–∞—Ñ—Å—Ç–≤–æ!**\n"
            "–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –º—É–¥—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –Ω–µ –¥–æ–ø—É—Å—Ç–∏—Ç–µ –∫—Ä–∞—Ö–∞.\n"
            f"**–¢–∏—Ç—É–ª:** {game.title}"
        )
        embed.add_field(
            name=f"**{game.current_event['title']}**", 
            value=game.current_event['description'], 
            inline=False
        )

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        view = GameView(game)

        await interaction.followup.send(embed=embed, view=view)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã: {e}", exc_info=True)
        await interaction.followup.send("‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", ephemeral=True)

@tree.command(name="stats", description="–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
async def stats(interaction: discord.Interaction):
    try:
        await interaction.response.defer()

        if interaction.user.id not in player_stats:
            await interaction.followup.send("–í—ã –µ—â–µ –Ω–µ –∏–≥—Ä–∞–ª–∏! –ù–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É —Å –ø–æ–º–æ—â—å—é `/start_game`")
            return

        stats = player_stats[interaction.user.id]
        games_played = stats["games_played"]
        avg_wealth = stats["total_wealth"] // games_played if games_played else 0
        avg_popularity = stats["total_popularity"] // games_played if games_played else 0
        avg_karma = stats["total_karma"] // games_played if games_played else 0

        # –°–æ–±–∏—Ä–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        achievements = "\n".join([ACHIEVEMENTS[a] for a in stats["achievements"]]) if stats["achievements"] else "–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"

        embed = discord.Embed(
            title="üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            color=discord.Color.blue()
        )

        embed.add_field(name="üéÆ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ", value=str(games_played), inline=True)
        embed.add_field(name="üí∞ –°—Ä–µ–¥–Ω–µ–µ –±–æ–≥–∞—Ç—Å—Ç–≤–æ", value=f"{avg_wealth}/100", inline=True)
        embed.add_field(name="üë• –°—Ä–µ–¥–Ω—è—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å", value=f"{avg_popularity}/100", inline=True)
        embed.add_field(name="‚òØÔ∏è –°—Ä–µ–¥–Ω—è—è –∫–∞—Ä–º–∞", value=f"{avg_karma}/100", inline=True)
        embed.add_field(name="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", value=achievements, inline=False)

        await interaction.followup.send(embed=embed)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}", exc_info=True)
        await interaction.followup.send("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", ephemeral=True)

@tree.command(name="help_game", description="–ü–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ")
async def help_game(interaction: discord.Interaction):
    embed = discord.Embed(
        title="‚ùì –ü–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ì—Ä–∞—Ñ—Å—Ç–≤–æ–º'",
        description=(
            "–í—ã - –ø—Ä–∞–≤–∏—Ç–µ–ª—å —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ—Å—Ç–≤–∞. –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤–ª–∏—è—é—Ç –Ω–∞:\n\n"
            "üí∞ **–ë–æ–≥–∞—Ç—Å—Ç–≤–æ** - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–π –∫–∞–∑–Ω—ã\n"
            "üë• **–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å** - –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –Ω–∞—Ä–æ–¥–∞ –∫ –≤–∞–º\n"
            "‚òØÔ∏è **–ö–∞—Ä–º–∞** - –¥—É—Ö–æ–≤–Ω–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ –≤–∞—à–∏—Ö –∑–µ–º–µ–ª—å\n\n"
            "–ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–¥–∏–Ω –∏–∑ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç 0 –∏–ª–∏ 100.\n"
            "–° –∫–∞–∂–¥—ã–º —Ä–µ—à–µ–Ω–∏–µ–º –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–æ–≤—ã–π —Ç–∏—Ç—É–ª –∏ –≥–µ—Ä–± –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ø–µ—Ö–æ–≤!"
        ),
        color=discord.Color.green()
    )

    embed.add_field(
        name="üéÆ –ö–æ–º–∞–Ω–¥—ã",
        value=(
            "`/start_game` - –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É\n"
            "`/stats` - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
            "`/help_game` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        ),
        inline=False
    )

    embed.add_field(
        name="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
        value=(
            "–°–æ–±–∏—Ä–∞–π—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –æ—Å–æ–±—ã–µ —É—Å–ø–µ—Ö–∏ –≤ –∏–≥—Ä–µ!\n"
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π `/stats`"
        ),
        inline=False
    )

    embed.set_footer(text="–£–¥–∞—á–∏ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä–∞—Ñ—Å—Ç–≤–æ–º, –≤–∞—à–∞ —Å–≤–µ—Ç–ª–æ—Å—Ç—å!")

    await interaction.response.send_message(embed=embed)

@bot.event
async def on_ready():
    logging.info(f'–ë–æ—Ç {bot.user.name} –∑–∞–ø—É—â–µ–Ω! ID: {bot.user.id}')
    logging.info(f'–°—Ç–∞—Ç—É—Å: {bot.status}')
    try:
        synced = await tree.sync()
        logging.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    bot.loop.create_task(background_activity())

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
async def background_activity():
    await bot.wait_until_ready()
    while not bot.is_closed():
        try:
            now = datetime.datetime.now()
            logger.info(f"üîÅ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {now.strftime('%Y-%m-%d %H:%M:%S')}")
            await asyncio.sleep(300)  # 5 –º–∏–Ω—É—Ç
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ: {e}")
            await asyncio.sleep(60)

# –§–æ–Ω–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
async def clean_games():
    while True:
        await asyncio.sleep(300)  # –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        current_time = asyncio.get_event_loop().time()
        to_remove = []

        for user_id, game in list(active_games.items()):
            if current_time - game.last_active > 600:  # 10 –º–∏–Ω—É—Ç –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                to_remove.append(user_id)

        for user_id in to_remove:
            if user_id in active_games:
                del active_games[user_id]
            if user_id in recent_events:
                del recent_events[user_id]

        if to_remove:
            logging.info(f"–£–¥–∞–ª–µ–Ω–æ {len(to_remove)} –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä")

# –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
@bot.event
async def setup_hook():
    bot.loop.create_task(clean_games())
    logging.info("–§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∑–∞–ø—É—â–µ–Ω—ã")

# ... –¥—Ä—É–≥–æ–π –∫–æ–¥ ...

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    import threading
    web_thread = threading.Thread(target=run_web)
    web_thread.daemon = True
    web_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º Discord –±–æ—Ç–∞
    TOKEN = os.getenv('TOKEN')
    if TOKEN:
        try:
            bot.run(TOKEN, reconnect=True)
        except Exception as e:
            logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    else:
        logging.critical("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã.")
